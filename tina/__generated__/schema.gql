# DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
"""References another document, used as a foreign key"""
scalar Reference

""""""
scalar JSON

type SystemInfo {
  filename: String!
  title: String
  basename: String!
  hasReferences: Boolean
  breadcrumbs(excludeExtension: Boolean): [String!]!
  path: String!
  relativePath: String!
  extension: String!
  template: String!
  collection: Collection!
}

type Folder {
  name: String!
  path: String!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String!
  endCursor: String!
}

""""""
interface Node {
  id: ID!
}

""""""
interface Document {
  id: ID!
  _sys: SystemInfo
  _values: JSON!
}

"""A relay-compliant pagination connection"""
interface Connection {
  totalCount: Float!
  pageInfo: PageInfo!
}

type Query {
  getOptimizedQuery(queryString: String!): String
  collection(collection: String): Collection!
  collections: [Collection!]!
  node(id: String): Node!
  document(collection: String, relativePath: String): DocumentNode!
  home_en(relativePath: String): Home_en!
  home_enConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Home_enFilter): Home_enConnection!
  home_si(relativePath: String): Home_si!
  home_siConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Home_siFilter): Home_siConnection!
  home_ta(relativePath: String): Home_ta!
  home_taConnection(before: String, after: String, first: Float, last: Float, sort: String, filter: Home_taFilter): Home_taConnection!
}

input DocumentFilter {
  home_en: Home_enFilter
  home_si: Home_siFilter
  home_ta: Home_taFilter
}

type DocumentConnectionEdges {
  cursor: String!
  node: DocumentNode
}

type DocumentConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [DocumentConnectionEdges]
}

type Collection {
  name: String!
  slug: String!
  label: String
  path: String!
  format: String
  matches: String
  templates: [JSON]
  fields: [JSON]
  documents(before: String, after: String, first: Float, last: Float, sort: String, filter: DocumentFilter, folder: String): DocumentConnection!
}

union DocumentNode = Home_en | Home_si | Home_ta | Folder

type Home_enHeroCta_primary {
  text: String!
  href: String!
}

type Home_enHeroCta_secondary {
  text: String!
  href: String!
}

type Home_enHero {
  title: String!
  subtitle: String
  description: String
  cta_primary: Home_enHeroCta_primary
  cta_secondary: Home_enHeroCta_secondary
}

type Home_enMission_statement {
  title: String!
  content: String!
}

type Home_enFeatured_departments {
  name: String!
  description: String!
  icon: String!
  href: String!
}

type Home_enRecent_events {
  title: String!
  date: String!
  time: String!
  location: String!
  description: String!
  image: String
  category: String
}

type Home_enAnnouncements {
  title: String!
  date: String!
  content: String!
  priority: String
  category: String
}

type Home_enStatistics {
  number: String!
  label: String!
}

type Home_enQuick_actions {
  title: String!
  description: String!
  icon: String!
  href: String!
  color: String
}

type Home_enNewsletter {
  title: String!
  description: String!
  placeholder: String!
  button: String!
  privacy: String
}

type Home_en implements Node & Document {
  hero: Home_enHero
  mission_statement: Home_enMission_statement
  featured_departments: [Home_enFeatured_departments]
  recent_events: [Home_enRecent_events]
  announcements: [Home_enAnnouncements]
  statistics: [Home_enStatistics]
  quick_actions: [Home_enQuick_actions]
  newsletter: Home_enNewsletter
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input StringFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input Home_enHeroCta_primaryFilter {
  text: StringFilter
  href: StringFilter
}

input Home_enHeroCta_secondaryFilter {
  text: StringFilter
  href: StringFilter
}

input Home_enHeroFilter {
  title: StringFilter
  subtitle: StringFilter
  description: StringFilter
  cta_primary: Home_enHeroCta_primaryFilter
  cta_secondary: Home_enHeroCta_secondaryFilter
}

input Home_enMission_statementFilter {
  title: StringFilter
  content: StringFilter
}

input Home_enFeatured_departmentsFilter {
  name: StringFilter
  description: StringFilter
  icon: StringFilter
  href: StringFilter
}

input DatetimeFilter {
  after: String
  before: String
  eq: String
  exists: Boolean
  in: [String]
}

input ImageFilter {
  startsWith: String
  eq: String
  exists: Boolean
  in: [String]
}

input Home_enRecent_eventsFilter {
  title: StringFilter
  date: DatetimeFilter
  time: StringFilter
  location: StringFilter
  description: StringFilter
  image: ImageFilter
  category: StringFilter
}

input Home_enAnnouncementsFilter {
  title: StringFilter
  date: DatetimeFilter
  content: StringFilter
  priority: StringFilter
  category: StringFilter
}

input Home_enStatisticsFilter {
  number: StringFilter
  label: StringFilter
}

input Home_enQuick_actionsFilter {
  title: StringFilter
  description: StringFilter
  icon: StringFilter
  href: StringFilter
  color: StringFilter
}

input Home_enNewsletterFilter {
  title: StringFilter
  description: StringFilter
  placeholder: StringFilter
  button: StringFilter
  privacy: StringFilter
}

input Home_enFilter {
  hero: Home_enHeroFilter
  mission_statement: Home_enMission_statementFilter
  featured_departments: Home_enFeatured_departmentsFilter
  recent_events: Home_enRecent_eventsFilter
  announcements: Home_enAnnouncementsFilter
  statistics: Home_enStatisticsFilter
  quick_actions: Home_enQuick_actionsFilter
  newsletter: Home_enNewsletterFilter
}

type Home_enConnectionEdges {
  cursor: String!
  node: Home_en
}

type Home_enConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Home_enConnectionEdges]
}

type Home_siHeroCta_primary {
  text: String!
  href: String!
}

type Home_siHeroCta_secondary {
  text: String!
  href: String!
}

type Home_siHero {
  title: String!
  subtitle: String
  description: String
  cta_primary: Home_siHeroCta_primary
  cta_secondary: Home_siHeroCta_secondary
}

type Home_siMission_statement {
  title: String!
  content: String!
}

type Home_siFeatured_departments {
  name: String!
  description: String!
  icon: String!
  href: String!
}

type Home_siRecent_events {
  title: String!
  date: String!
  time: String!
  location: String!
  description: String!
  image: String
  category: String
}

type Home_siAnnouncements {
  title: String!
  date: String!
  content: String!
  priority: String
  category: String
}

type Home_siStatistics {
  number: String!
  label: String!
}

type Home_siQuick_actions {
  title: String!
  description: String!
  icon: String!
  href: String!
  color: String
}

type Home_siNewsletter {
  title: String!
  description: String!
  placeholder: String!
  button: String!
  privacy: String
}

type Home_si implements Node & Document {
  hero: Home_siHero
  mission_statement: Home_siMission_statement
  featured_departments: [Home_siFeatured_departments]
  recent_events: [Home_siRecent_events]
  announcements: [Home_siAnnouncements]
  statistics: [Home_siStatistics]
  quick_actions: [Home_siQuick_actions]
  newsletter: Home_siNewsletter
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Home_siHeroCta_primaryFilter {
  text: StringFilter
  href: StringFilter
}

input Home_siHeroCta_secondaryFilter {
  text: StringFilter
  href: StringFilter
}

input Home_siHeroFilter {
  title: StringFilter
  subtitle: StringFilter
  description: StringFilter
  cta_primary: Home_siHeroCta_primaryFilter
  cta_secondary: Home_siHeroCta_secondaryFilter
}

input Home_siMission_statementFilter {
  title: StringFilter
  content: StringFilter
}

input Home_siFeatured_departmentsFilter {
  name: StringFilter
  description: StringFilter
  icon: StringFilter
  href: StringFilter
}

input Home_siRecent_eventsFilter {
  title: StringFilter
  date: DatetimeFilter
  time: StringFilter
  location: StringFilter
  description: StringFilter
  image: ImageFilter
  category: StringFilter
}

input Home_siAnnouncementsFilter {
  title: StringFilter
  date: DatetimeFilter
  content: StringFilter
  priority: StringFilter
  category: StringFilter
}

input Home_siStatisticsFilter {
  number: StringFilter
  label: StringFilter
}

input Home_siQuick_actionsFilter {
  title: StringFilter
  description: StringFilter
  icon: StringFilter
  href: StringFilter
  color: StringFilter
}

input Home_siNewsletterFilter {
  title: StringFilter
  description: StringFilter
  placeholder: StringFilter
  button: StringFilter
  privacy: StringFilter
}

input Home_siFilter {
  hero: Home_siHeroFilter
  mission_statement: Home_siMission_statementFilter
  featured_departments: Home_siFeatured_departmentsFilter
  recent_events: Home_siRecent_eventsFilter
  announcements: Home_siAnnouncementsFilter
  statistics: Home_siStatisticsFilter
  quick_actions: Home_siQuick_actionsFilter
  newsletter: Home_siNewsletterFilter
}

type Home_siConnectionEdges {
  cursor: String!
  node: Home_si
}

type Home_siConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Home_siConnectionEdges]
}

type Home_taHeroCta_primary {
  text: String!
  href: String!
}

type Home_taHeroCta_secondary {
  text: String!
  href: String!
}

type Home_taHero {
  title: String!
  subtitle: String
  description: String
  cta_primary: Home_taHeroCta_primary
  cta_secondary: Home_taHeroCta_secondary
}

type Home_taMission_statement {
  title: String!
  content: String!
}

type Home_taFeatured_departments {
  name: String!
  description: String!
  icon: String!
  href: String!
}

type Home_taRecent_events {
  title: String!
  date: String!
  time: String!
  location: String!
  description: String!
  image: String
  category: String
}

type Home_taAnnouncements {
  title: String!
  date: String!
  content: String!
  priority: String
  category: String
}

type Home_taStatistics {
  number: String!
  label: String!
}

type Home_taQuick_actions {
  title: String!
  description: String!
  icon: String!
  href: String!
  color: String
}

type Home_taNewsletter {
  title: String!
  description: String!
  placeholder: String!
  button: String!
  privacy: String
}

type Home_ta implements Node & Document {
  hero: Home_taHero
  mission_statement: Home_taMission_statement
  featured_departments: [Home_taFeatured_departments]
  recent_events: [Home_taRecent_events]
  announcements: [Home_taAnnouncements]
  statistics: [Home_taStatistics]
  quick_actions: [Home_taQuick_actions]
  newsletter: Home_taNewsletter
  id: ID!
  _sys: SystemInfo!
  _values: JSON!
}

input Home_taHeroCta_primaryFilter {
  text: StringFilter
  href: StringFilter
}

input Home_taHeroCta_secondaryFilter {
  text: StringFilter
  href: StringFilter
}

input Home_taHeroFilter {
  title: StringFilter
  subtitle: StringFilter
  description: StringFilter
  cta_primary: Home_taHeroCta_primaryFilter
  cta_secondary: Home_taHeroCta_secondaryFilter
}

input Home_taMission_statementFilter {
  title: StringFilter
  content: StringFilter
}

input Home_taFeatured_departmentsFilter {
  name: StringFilter
  description: StringFilter
  icon: StringFilter
  href: StringFilter
}

input Home_taRecent_eventsFilter {
  title: StringFilter
  date: DatetimeFilter
  time: StringFilter
  location: StringFilter
  description: StringFilter
  image: ImageFilter
  category: StringFilter
}

input Home_taAnnouncementsFilter {
  title: StringFilter
  date: DatetimeFilter
  content: StringFilter
  priority: StringFilter
  category: StringFilter
}

input Home_taStatisticsFilter {
  number: StringFilter
  label: StringFilter
}

input Home_taQuick_actionsFilter {
  title: StringFilter
  description: StringFilter
  icon: StringFilter
  href: StringFilter
  color: StringFilter
}

input Home_taNewsletterFilter {
  title: StringFilter
  description: StringFilter
  placeholder: StringFilter
  button: StringFilter
  privacy: StringFilter
}

input Home_taFilter {
  hero: Home_taHeroFilter
  mission_statement: Home_taMission_statementFilter
  featured_departments: Home_taFeatured_departmentsFilter
  recent_events: Home_taRecent_eventsFilter
  announcements: Home_taAnnouncementsFilter
  statistics: Home_taStatisticsFilter
  quick_actions: Home_taQuick_actionsFilter
  newsletter: Home_taNewsletterFilter
}

type Home_taConnectionEdges {
  cursor: String!
  node: Home_ta
}

type Home_taConnection implements Connection {
  pageInfo: PageInfo!
  totalCount: Float!
  edges: [Home_taConnectionEdges]
}

type Mutation {
  addPendingDocument(collection: String!, relativePath: String!, template: String): DocumentNode!
  updateDocument(collection: String, relativePath: String!, params: DocumentUpdateMutation!): DocumentNode!
  deleteDocument(collection: String, relativePath: String!): DocumentNode!
  createDocument(collection: String, relativePath: String!, params: DocumentMutation!): DocumentNode!
  createFolder(collection: String, relativePath: String!): DocumentNode!
  updateHome_en(relativePath: String!, params: Home_enMutation!): Home_en!
  createHome_en(relativePath: String!, params: Home_enMutation!): Home_en!
  updateHome_si(relativePath: String!, params: Home_siMutation!): Home_si!
  createHome_si(relativePath: String!, params: Home_siMutation!): Home_si!
  updateHome_ta(relativePath: String!, params: Home_taMutation!): Home_ta!
  createHome_ta(relativePath: String!, params: Home_taMutation!): Home_ta!
}

input DocumentUpdateMutation {
  home_en: Home_enMutation
  home_si: Home_siMutation
  home_ta: Home_taMutation
  relativePath: String
}

input DocumentMutation {
  home_en: Home_enMutation
  home_si: Home_siMutation
  home_ta: Home_taMutation
}

input Home_enHeroCta_primaryMutation {
  text: String
  href: String
}

input Home_enHeroCta_secondaryMutation {
  text: String
  href: String
}

input Home_enHeroMutation {
  title: String
  subtitle: String
  description: String
  cta_primary: Home_enHeroCta_primaryMutation
  cta_secondary: Home_enHeroCta_secondaryMutation
}

input Home_enMission_statementMutation {
  title: String
  content: String
}

input Home_enFeatured_departmentsMutation {
  name: String
  description: String
  icon: String
  href: String
}

input Home_enRecent_eventsMutation {
  title: String
  date: String
  time: String
  location: String
  description: String
  image: String
  category: String
}

input Home_enAnnouncementsMutation {
  title: String
  date: String
  content: String
  priority: String
  category: String
}

input Home_enStatisticsMutation {
  number: String
  label: String
}

input Home_enQuick_actionsMutation {
  title: String
  description: String
  icon: String
  href: String
  color: String
}

input Home_enNewsletterMutation {
  title: String
  description: String
  placeholder: String
  button: String
  privacy: String
}

input Home_enMutation {
  hero: Home_enHeroMutation
  mission_statement: Home_enMission_statementMutation
  featured_departments: [Home_enFeatured_departmentsMutation]
  recent_events: [Home_enRecent_eventsMutation]
  announcements: [Home_enAnnouncementsMutation]
  statistics: [Home_enStatisticsMutation]
  quick_actions: [Home_enQuick_actionsMutation]
  newsletter: Home_enNewsletterMutation
}

input Home_siHeroCta_primaryMutation {
  text: String
  href: String
}

input Home_siHeroCta_secondaryMutation {
  text: String
  href: String
}

input Home_siHeroMutation {
  title: String
  subtitle: String
  description: String
  cta_primary: Home_siHeroCta_primaryMutation
  cta_secondary: Home_siHeroCta_secondaryMutation
}

input Home_siMission_statementMutation {
  title: String
  content: String
}

input Home_siFeatured_departmentsMutation {
  name: String
  description: String
  icon: String
  href: String
}

input Home_siRecent_eventsMutation {
  title: String
  date: String
  time: String
  location: String
  description: String
  image: String
  category: String
}

input Home_siAnnouncementsMutation {
  title: String
  date: String
  content: String
  priority: String
  category: String
}

input Home_siStatisticsMutation {
  number: String
  label: String
}

input Home_siQuick_actionsMutation {
  title: String
  description: String
  icon: String
  href: String
  color: String
}

input Home_siNewsletterMutation {
  title: String
  description: String
  placeholder: String
  button: String
  privacy: String
}

input Home_siMutation {
  hero: Home_siHeroMutation
  mission_statement: Home_siMission_statementMutation
  featured_departments: [Home_siFeatured_departmentsMutation]
  recent_events: [Home_siRecent_eventsMutation]
  announcements: [Home_siAnnouncementsMutation]
  statistics: [Home_siStatisticsMutation]
  quick_actions: [Home_siQuick_actionsMutation]
  newsletter: Home_siNewsletterMutation
}

input Home_taHeroCta_primaryMutation {
  text: String
  href: String
}

input Home_taHeroCta_secondaryMutation {
  text: String
  href: String
}

input Home_taHeroMutation {
  title: String
  subtitle: String
  description: String
  cta_primary: Home_taHeroCta_primaryMutation
  cta_secondary: Home_taHeroCta_secondaryMutation
}

input Home_taMission_statementMutation {
  title: String
  content: String
}

input Home_taFeatured_departmentsMutation {
  name: String
  description: String
  icon: String
  href: String
}

input Home_taRecent_eventsMutation {
  title: String
  date: String
  time: String
  location: String
  description: String
  image: String
  category: String
}

input Home_taAnnouncementsMutation {
  title: String
  date: String
  content: String
  priority: String
  category: String
}

input Home_taStatisticsMutation {
  number: String
  label: String
}

input Home_taQuick_actionsMutation {
  title: String
  description: String
  icon: String
  href: String
  color: String
}

input Home_taNewsletterMutation {
  title: String
  description: String
  placeholder: String
  button: String
  privacy: String
}

input Home_taMutation {
  hero: Home_taHeroMutation
  mission_statement: Home_taMission_statementMutation
  featured_departments: [Home_taFeatured_departmentsMutation]
  recent_events: [Home_taRecent_eventsMutation]
  announcements: [Home_taAnnouncementsMutation]
  statistics: [Home_taStatisticsMutation]
  quick_actions: [Home_taQuick_actionsMutation]
  newsletter: Home_taNewsletterMutation
}

schema {
  query: Query
  mutation: Mutation
}
