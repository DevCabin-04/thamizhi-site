---
export interface Props {
  fallback?: string;
  showDetails?: boolean;
  error?: any;
}

const { fallback = "Something went wrong", showDetails = false, error } = Astro.props;
---

<div class="error-boundary bg-red-50 border border-red-200 rounded-lg p-6 my-4">
  <div class="flex items-center mb-4">
    <svg class="w-6 h-6 text-red-600 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 6.5c-.77.833-.192 2.5 1.732 2.5z" />
    </svg>
    <h3 class="text-lg font-semibold text-red-800">Error</h3>
  </div>

  <p class="text-red-700 mb-4">{fallback}</p>

  {showDetails && error && (
    <details class="bg-red-100 rounded p-3">
      <summary class="cursor-pointer text-sm font-medium text-red-800 mb-2">
        Show Error Details
      </summary>
      <pre class="text-xs text-red-600 overflow-auto">{JSON.stringify(error, null, 2)}</pre>
    </details>
  )}

  <div class="flex gap-2 mt-4">
    <button
      onclick="window.location.reload()"
      class="bg-red-600 text-white px-4 py-2 rounded text-sm hover:bg-red-700 transition-colors"
    >
      Retry
    </button>
    <a
      href="/"
      class="bg-gray-600 text-white px-4 py-2 rounded text-sm hover:bg-gray-700 transition-colors"
    >
      Go Home
    </a>
  </div>
</div>
